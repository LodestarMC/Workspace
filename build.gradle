plugins {
    id("org.jetbrains.gradle.plugin.idea-ext") version "1.1"
}

boolean lodestonePresent = findProject("Lodestone") != null

subprojects {
    configurations.all {
        if (it.name.startsWith("_")) {
            // You must exclude the same modules you substitute here, because ForgeGradle
            if (lodestonePresent) {
                exclude group: "team.lodestar.lodestone", module: "lodestone"
            }
            return
        }

        resolutionStrategy.dependencySubstitution {
            // Apply substitutions for modules your projects depend on, replacing them with another project
            if (lodestonePresent) {
                substitute module("team.lodestar.lodestone:lodestone") using project(":Lodestone")
            }
        }
        resolutionStrategy.force("curse.maven:farmers_delight-398521:3739914_mapped_official_1.18.2")
    }
}

project('runenv') {
    ext {
        mcversion = project.minecraftVersion
        forgeversion = project.forgeVersion
        // javaversion = 17 // Defaults to 17 already
//        mappings = [channel: 'parchment', version: "${parchmentVersion}-${minecraftVersion}"]
        // runArgs = [ ] // Arguments applied to all runs
        // runProps = [ name: value ] // Properties applied to all runs
    }
    configurations.all {
        resolutionStrategy.force("net.minecraftforge:forge:${project.minecraftVersion}-${project.forgeVersion}")
    }
    repositories {
        // Repositories for additional runtime dependencies go here
    }
    afterEvaluate {
        dependencies {
            // This is where any additional runtime dependencies for your dev environment go
        }
    }
}

// Ensure the run directory is excluded from the idea module
idea.module {
    excludeDirs << file("run")
}
